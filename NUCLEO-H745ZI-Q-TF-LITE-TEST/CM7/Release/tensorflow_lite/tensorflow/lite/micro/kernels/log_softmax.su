common.h:500:13:IntegerType tflite::SaturatingRoundingMultiplyByPOTParam(IntegerType, int) [with IntegerType = long int]	20	static
fixedpoint.h:329:21:IntegerType gemmlowp::SaturatingRoundingDoublingHighMul(IntegerType, IntegerType) [with IntegerType = long int]	8	static
runtime_shape.h:54:11:int32_t tflite::RuntimeShape::Dims(int) const	8	static
types.h:502:12:int tflite::FlatSizeSkipDim(const tflite::RuntimeShape&, int)	16	static
log_softmax.cc:95:14:TfLiteStatus tflite::{anonymous}::LogSoftmaxPrepare(TfLiteContext*, TfLiteNode*)	88	static
log_softmax.h:28:13:void tflite::reference_ops::LogSoftmax(const tflite::SoftmaxParams&, const tflite::RuntimeShape&, const float*, const tflite::RuntimeShape&, float*)	72	static
log_softmax.cc:139:20:TfLiteRegistration tflite::Register_LOG_SOFTMAX()	16	static
fixedpoint.h:357:20:IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, int) [with IntegerType = long int]	8	static
common.h:156:16:int32_t tflite::MultiplyByQuantizedMultiplier(int32_t, int32_t, int)	8	static
fixedpoint.h:687:47:typename FixedPointType::ScalarRawType gemmlowp::RescaleConstantInitializer(int32_t) [with FixedPointType = gemmlowp::FixedPoint<long int, 0>]	8	static
fixedpoint.h:539:55:gemmlowp::FixedPoint<tRawType, (tIntegerBits_a + tIntegerBits_b)> gemmlowp::operator*(gemmlowp::FixedPoint<tRawType, tIntegerBits_a>, gemmlowp::FixedPoint<tRawType, tIntegerBits_b>) [with tRawType = long int; int tIntegerBits_a = 0; int tIntegerBits_b = 0]	8	static
fixedpoint.h:721:25:gemmlowp::FixedPoint<tRawType, 0> gemmlowp::exp_on_interval_between_negative_one_quarter_and_0_excl(gemmlowp::FixedPoint<tRawType, 0>) [with tRawType = long int]	24	static
fixedpoint.h:746:25:gemmlowp::FixedPoint<tRawType, 0> gemmlowp::exp_on_negative_values(gemmlowp::FixedPoint<tRawType, tIntegerBits_a>) [with tRawType = long int; int tIntegerBits = 5]	40	static
fixedpoint.h:385:22:static IntegerType gemmlowp::ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType, 1>::eval(IntegerType) [with int Exponent = 1; IntegerType = long int]	16	static
fixedpoint.h:842:25:gemmlowp::FixedPoint<tRawType, 0> gemmlowp::one_over_one_plus_x_for_x_in_0_1(gemmlowp::FixedPoint<tRawType, 0>) [with tRawType = long int]	32	static
common.h:575:1:gemmlowp::FixedPoint<long int, OutputIntegerBits> tflite::log_x_for_x_greater_than_or_equal_to_1_impl(gemmlowp::FixedPoint<long int, InputIntegerBits>) [with int OutputIntegerBits = 5; int InputIntegerBits = 12]	80	static
log_softmax.h:154:13:void tflite::reference_ops::LogSoftmaxQuantized(const tflite::SoftmaxParams&, size_t, size_t, const tflite::RuntimeShape&, const T*, const tflite::RuntimeShape&, T*) [with T = signed char]	88	static
log_softmax.cc:99:14:TfLiteStatus tflite::{anonymous}::LogSoftmaxEval(TfLiteContext*, TfLiteNode*)	152	static
